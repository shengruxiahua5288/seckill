<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
      <!-- 配置整合mybatis过程-->
    <!-- 1：配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2:数据库连接池,通过jdbc.properties中的值传递到相应的${jdbc.driver}属性值-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- c3p0连接池的私有属性，最多保持30个数据库连接对象，根据业务场景调整连接数据库的属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 ，如果连接数据库的对象线程超过最大连接数，则设置等待超时时间-->
        <property name="checkoutTimeout"  value="5000"/>
        <!-- 获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="4"/>
    </bean>

    <!-- 3:配置SqlSessionFactory对象，spring和mybatis的整合配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名,扫描org.seckill.entity包中的entiy，当需要扫描多个包时，包与包之间用;号隔开
        value="包名1;包名2"
        -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4:配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory，当是用时才注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包-->
        <property name="basePackage" value="dao"/>
    </bean>

    <!-- RedisDao配置-->
    <bean id="redisDao" class="dao.cache.RedisDao">
        <constructor-arg name="ip" value="111.231.240.211"/>
        <constructor-arg name="port" value="6379"/>
    </bean>


   <!-- <bean class="redis.clients.jedis.JedisPool" id="jedisPool">
        <constructor-arg name="host" value="111.231.240.211"/>
        <constructor-arg name="poolConfig" ref="dataJedisPoolConfig"/>
        <constructor-arg name="port" value="6379"/>
    </bean>

    <bean id="dataJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300"/>
        <property name="maxIdle" value="100"/>
        <property name="maxWaitMillis" value="10000"/>
        <property name="testOnBorrow" value="true"/>
    </bean>
-->
</beans>
